{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/gimminseong/side_project/apple_farm/pratice/apple-farm/src/pages/signup.js\";\nimport React, { useCallback, useState } from 'react';\nimport Head from 'next/head';\nimport { Form, Input, Checkbox, Button } from 'antd';\nimport AppLayouts from '../components/AppLayouts';\nimport styled from 'styled-components';\nimport useInput from 'hooks/useinput'; // useCallback  : useMemo와 비슷한 훅임안된다 (퍼포먼스 최적화를 위해서 사용되는 훅이다)\n// 리액트 개발자 도구 > Profiler 탭의 Start Profiling기능(녹화 버튼)을 사용하면 컴포넌트의 랜더링을 분석할 수 있다.\n// https://thisblogfor.me/react/hooks_memoization/\n// useMemo는 특정 결과값을 재사용 할 때 사용하는 반면\n// useCallback은 특정 함수를 새로 만들지 않고 재사용 하고 싶을 때 사용함\n// 렌더링 될 대 함수도 다시 생성하는데 그것을 막기 위함.\n// useState : 컴포넌트에서 바뀌는 값 관리하기. 컴포넌트에서 상태를 관리할 수 있음!!\n//  16.8 버전에서는 함수형 컴포넌트에서는 상태를 관리할 수 없었다. 하지만 hooks라는 기능을 통해 컴포넌트에서도 상태를 관리할 수 있게 되었음\n// 컴포넌트에서는 동적인 값을 상태라고 부른다. 리액트에서 useState라는 함수가 있는데 이것을 사용하면 컴포넌트에서 상태 관리 가능함\n\nconst ErrorMessage = styled.div`\n\n`;\n\nconst Signup = () => {\n  // 훅스들의 세트를 묶을 수 있다.\n  // 반복되는것들을 커스텀 훅을 통해 묶을 수 있다.\n  // 컴포넌트 로직 자체를 분할하거나 재사용할 수 있음.\n  // \n  // const [nickname, setNickname] = useState('');\n  // const onChangeNickname = useCallback((e) => {\n  //   setNickname(e.target.value);\n  // }, []);\n  // 값과 세터, 초기값을 같이 선언한다고 이해하면 될듯\n  // https://ko.reactjs.org/docs/hooks-state.html\n  // const [<상태 값 저장 변수>, <상태 값 갱신 함수>] = useState(<상태 초기 값>);\n  const [id, onChangeId] = useInput('');\n  const [nickname, onChangeNickname] = useInput('');\n  const [password, onChangePassword] = useInput('');\n  const {\n    0: passwordCheck,\n    1: setPasswordCheckError\n  } = useState('');\n  const {\n    0: passwordError,\n    1: setPasswordError\n  } = useState(false);\n  const {\n    0: term,\n    1: setTerm\n  } = useState('');\n  const {\n    0: termError,\n    1: setTermError\n  } = useState('');\n  const onChangeTerm = useCallback(e => {\n    setTerm(e.target.checked);\n    setTermError(false);\n  }, []); // const onChangePassword = useCallback((e) => {\n  //   setPassword(e.target.value);\n  //   setPasswordError(e.target.value === password);\n  // }, [password]);\n  // function onSubmit() {\n  // }\n\n  const onSubmit = useCallback(() => {\n    if (nickname.length < 2 || nickname.length > 8) return setNicknameError(false); // if(password !== passwordCheck){\n    //   return setPasswordError(true);\n    // }\n\n    if (!term) {\n      return setTermError(false);\n    }\n\n    console.log(id, nickname, password);\n  }, [password, passwordCheck, term]);\n  return /*#__PURE__*/_jsxDEV(AppLayouts, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785 | NodeBird\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onFinsh: onSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uB2C9\\uB124\\uC784\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"user-nick\",\n          value: nickname,\n          required: true,\n          onChange: onChangeNickname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), password && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: 'red'\n          },\n          children: \"\\uC0AC\\uC6A9\\uD558\\uC2E4 \\uC218 \\uC5C6\\uB294 \\uB2C9\\uB124\\uC784 \\uC785\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n            name: \"user-term\",\n            checked: term,\n            onChanged: onChangeTerm,\n            children: \"\\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758\\uD569\\uB2C8\\uB2E4.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 11\n          }, this), termError && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            children: \"\\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758\\uD558\\uC154\\uC57C \\uD569\\uB2C8\\uB2E4.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 10\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"\\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758\\uD558\\uACE0 \\uAC00\\uC785\\uD558\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Signup;","map":{"version":3,"sources":["/Users/gimminseong/side_project/apple_farm/pratice/apple-farm/src/pages/signup.js"],"names":["React","useCallback","useState","Head","Form","Input","Checkbox","Button","AppLayouts","styled","useInput","ErrorMessage","div","Signup","id","onChangeId","nickname","onChangeNickname","password","onChangePassword","passwordCheck","setPasswordCheckError","passwordError","setPasswordError","term","setTerm","termError","setTermError","onChangeTerm","e","target","checked","onSubmit","length","setNicknameError","console","log","color","marginTop"],"mappings":"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","sourcesContent":["import React, {useCallback, useState} from 'react';\nimport Head from 'next/head';\nimport {Form, Input, Checkbox, Button} from 'antd';\nimport AppLayouts from '../components/AppLayouts';\nimport styled from 'styled-components';\nimport useInput from 'hooks/useinput';\n// useCallback  : useMemo와 비슷한 훅임안된다 (퍼포먼스 최적화를 위해서 사용되는 훅이다)\n// 리액트 개발자 도구 > Profiler 탭의 Start Profiling기능(녹화 버튼)을 사용하면 컴포넌트의 랜더링을 분석할 수 있다.\n// https://thisblogfor.me/react/hooks_memoization/\n\n// useMemo는 특정 결과값을 재사용 할 때 사용하는 반면\n// useCallback은 특정 함수를 새로 만들지 않고 재사용 하고 싶을 때 사용함\n\n// 렌더링 될 대 함수도 다시 생성하는데 그것을 막기 위함.\n\n// useState : 컴포넌트에서 바뀌는 값 관리하기. 컴포넌트에서 상태를 관리할 수 있음!!\n//  16.8 버전에서는 함수형 컴포넌트에서는 상태를 관리할 수 없었다. 하지만 hooks라는 기능을 통해 컴포넌트에서도 상태를 관리할 수 있게 되었음\n\n// 컴포넌트에서는 동적인 값을 상태라고 부른다. 리액트에서 useState라는 함수가 있는데 이것을 사용하면 컴포넌트에서 상태 관리 가능함\n\n\nconst ErrorMessage = styled.div`\n\n`;\n\nconst Signup = () =>   {\n  // 훅스들의 세트를 묶을 수 있다.\n  // 반복되는것들을 커스텀 훅을 통해 묶을 수 있다.\n  // 컴포넌트 로직 자체를 분할하거나 재사용할 수 있음.\n\n  // \n  // const [nickname, setNickname] = useState('');\n  // const onChangeNickname = useCallback((e) => {\n  //   setNickname(e.target.value);\n  // }, []);\n// 값과 세터, 초기값을 같이 선언한다고 이해하면 될듯\n// https://ko.reactjs.org/docs/hooks-state.html\n  // const [<상태 값 저장 변수>, <상태 값 갱신 함수>] = useState(<상태 초기 값>);\n\n\n  const [id, onChangeId] = useInput('');\n  const [nickname, onChangeNickname] = useInput('');\n  const [password, onChangePassword] = useInput('');\n  const [passwordCheck, setPasswordCheckError] = useState('');\n  const [passwordError, setPasswordError] = useState(false);\n  const [term, setTerm] = useState('');\n  const [termError, setTermError] = useState('');\n  const onChangeTerm = useCallback((e) => {\n    setTerm(e.target.checked);\n    setTermError(false);\n  }, []);\n\n  // const onChangePassword = useCallback((e) => {\n  //   setPassword(e.target.value);\n  //   setPasswordError(e.target.value === password);\n  // }, [password]);\n\n  // function onSubmit() {\n\n  // }\n\n  const onSubmit = useCallback(() => {\n\n    if(nickname.length < 2 || nickname.length > 8)\n    return setNicknameError(false);\n    // if(password !== passwordCheck){\n    //   return setPasswordError(true);\n\n    // }\n    if(!term){\n      return setTermError(false);\n    }\n      console.log(id, nickname, password);\n  }, [password, passwordCheck, term]);\n\n  return (\n\n    <AppLayouts>\n\n      <Head>\n        <title>회원가입 | NodeBird</title>\n      </Head>\n      <Form onFinsh={onSubmit}>\n\n        <div>\n          <label>\n            닉네임을 입력해주세요.\n          </label>\n          <Input name =\"user-nick\" value = {nickname} required onChange = {onChangeNickname}/>\n          {password && <div style = {{color : 'red'}}>사용하실 수 없는 닉네임 입니다.</div>}\n        <div>\n          <Checkbox name = \"user-term\" checked = {term} onChanged={onChangeTerm}>약관에 동의합니다.</Checkbox>\n          {termError && <ErrorMessage>약관에 동의하셔야 합니다.</ErrorMessage>}\n        </div>\n        <div style={{marginTop : 10}}>\n          <Button type=\"primary\" htmlType=\"submit\">약관에 동의하고 가입하기</Button>\n        </div>\n        </div>\n      </Form>\n\n\n    </AppLayouts>\n  );\n\n};\n\n\nexport default Signup;"]},"metadata":{},"sourceType":"module"}