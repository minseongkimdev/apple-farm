{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/gimminseong/side_project/apple_farm/pratice/apple-farm/src/components/DraftEditor.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport dynamic from 'next/dynamic';\nconst ReactQuill = dynamic(_c = () => import('react-quill'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('react-quill')],\n    modules: ['react-quill']\n  }\n});\n_c2 = ReactQuill;\n\nfunction PureEditor({\n  QuillChange,\n  Contents\n}) {\n  _s();\n\n  const Quill = true ? require('quill') : () => false;\n  const quillElement = useRef(); // quill을 넣을 div\n\n  const quillInstance = useRef(); // quill 인스턴스\n\n  useEffect(() => {\n    if (quillElement.current) {\n      quillInstance.current = new Quill(quillElement.current, {\n        theme: 'snow',\n        placeholder: '내용을 입력해주세요',\n        modules: modules,\n        formats: formats\n      }); // 퀼 인스턴스를 편하게 쓰기 위해 변수 설정\n\n      const quill = quillInstance.current; // 텍스트를 쳤을 때 state에 담기\n\n      quill.on('text-change', (delta, oldDelta, source) => {\n        QuillChange(quill.root.innerHTML);\n      }); // 이미지 핸들링을 위한 커스텀 핸들러\n\n      const toolbar = quill.getModule('toolbar');\n      toolbar.addHandler('image', onClickImageBtn);\n    }\n  }, []); // 기존 내용을 가져오기 위함(수정)\n\n  const mounted = useRef(false);\n  useEffect(() => {\n    if (Contents === '' || mounted.current) return;\n    mounted.current = true;\n    quillInstance.current.root.innerHTML = Contents;\n  }, [Contents]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(QuillWrapper, {\n      className: \"wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: quillElement\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(PureEditor, \"N/Pm7Lzj4NqsLoTNk17UjNxN+lc=\");\n\n_c3 = PureEditor;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ReactQuill$dynamic\");\n$RefreshReg$(_c2, \"ReactQuill\");\n$RefreshReg$(_c3, \"PureEditor\");","map":{"version":3,"sources":["/Users/gimminseong/side_project/apple_farm/pratice/apple-farm/src/components/DraftEditor.js"],"names":["useState","dynamic","ReactQuill","ssr","PureEditor","QuillChange","Contents","Quill","require","quillElement","useRef","quillInstance","useEffect","current","theme","placeholder","modules","formats","quill","on","delta","oldDelta","source","root","innerHTML","toolbar","getModule","addHandler","onClickImageBtn","mounted"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,MAAMC,UAAU,GAAGD,OAAO,MAAC,MAAM,OAAO,aAAP,CAAP,EAA8B;AAAEE,EAAAA,GAAG,EAAE,KAAP;AAAA;AAAA,wCAAhB,aAAgB;AAAA,cAAhB,aAAgB;AAAA;AAAA,CAA9B,CAA1B;MAAMD,U;;AAEN,SAASE,UAAT,CAAoB;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAApB,EAA+C;AAAA;;AAC3C,QAAMC,KAAK,GAAG,OAA6BC,OAAO,CAAC,OAAD,CAApC,GAAgD,MAAM,KAApE;AAEA,QAAMC,YAAY,GAAGC,MAAM,EAA3B,CAH2C,CAGb;;AAC9B,QAAMC,aAAa,GAAGD,MAAM,EAA5B,CAJ2C,CAIZ;;AAE/BE,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIH,YAAY,CAACI,OAAjB,EAA0B;AACtBF,MAAAA,aAAa,CAACE,OAAd,GAAwB,IAAIN,KAAJ,CAAUE,YAAY,CAACI,OAAvB,EAAgC;AACpDC,QAAAA,KAAK,EAAE,MAD6C;AAEpDC,QAAAA,WAAW,EAAE,YAFuC;AAGpDC,QAAAA,OAAO,EAAEA,OAH2C;AAIpDC,QAAAA,OAAO,EAAEA;AAJ2C,OAAhC,CAAxB,CADsB,CAQtB;;AACA,YAAMC,KAAK,GAAGP,aAAa,CAACE,OAA5B,CATsB,CAWtB;;AACAK,MAAAA,KAAK,CAACC,EAAN,CAAS,aAAT,EAAwB,CAACC,KAAD,EAAQC,QAAR,EAAkBC,MAAlB,KAA6B;AACjDjB,QAAAA,WAAW,CAACa,KAAK,CAACK,IAAN,CAAWC,SAAZ,CAAX;AACH,OAFD,EAZsB,CAgBtB;;AACA,YAAMC,OAAO,GAAGP,KAAK,CAACQ,SAAN,CAAgB,SAAhB,CAAhB;AACAD,MAAAA,OAAO,CAACE,UAAR,CAAmB,OAAnB,EAA4BC,eAA5B;AACH;AACJ,GArBQ,EAqBN,EArBM,CAAT,CAN2C,CA6B3C;;AACA,QAAMC,OAAO,GAAGnB,MAAM,CAAC,KAAD,CAAtB;AACAE,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIN,QAAQ,KAAK,EAAb,IAAmBuB,OAAO,CAAChB,OAA/B,EAAwC;AACxCgB,IAAAA,OAAO,CAAChB,OAAR,GAAkB,IAAlB;AACAF,IAAAA,aAAa,CAACE,OAAd,CAAsBU,IAAtB,CAA2BC,SAA3B,GAAuClB,QAAvC;AACH,GAJQ,EAIN,CAACA,QAAD,CAJM,CAAT;AAMA,sBACI;AAAA,2BACI,QAAC,YAAD;AAAc,MAAA,SAAS,EAAC,SAAxB;AAAA,6BACI;AAAK,QAAA,GAAG,EAAEG;AAAV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAOH;;GA5CQL,U;;MAAAA,U","sourcesContent":["import { useState } from 'react'\nimport dynamic from 'next/dynamic'\nconst ReactQuill = dynamic(() => import('react-quill'), { ssr: false })\n\nfunction PureEditor({ QuillChange, Contents }) {\n    const Quill = typeof window === 'object' ? require('quill') : () => false\n\n    const quillElement = useRef() // quill을 넣을 div\n    const quillInstance = useRef() // quill 인스턴스\n\n    useEffect(() => {\n        if (quillElement.current) {\n            quillInstance.current = new Quill(quillElement.current, {\n                theme: 'snow',\n                placeholder: '내용을 입력해주세요',\n                modules: modules,\n                formats: formats,\n            })\n\n            // 퀼 인스턴스를 편하게 쓰기 위해 변수 설정\n            const quill = quillInstance.current\n\n            // 텍스트를 쳤을 때 state에 담기\n            quill.on('text-change', (delta, oldDelta, source) => {\n                QuillChange(quill.root.innerHTML)\n            })\n\n            // 이미지 핸들링을 위한 커스텀 핸들러\n            const toolbar = quill.getModule('toolbar')\n            toolbar.addHandler('image', onClickImageBtn)\n        }\n    }, [])\n\n    // 기존 내용을 가져오기 위함(수정)\n    const mounted = useRef(false)\n    useEffect(() => {\n        if (Contents === '' || mounted.current) return\n        mounted.current = true\n        quillInstance.current.root.innerHTML = Contents\n    }, [Contents])\n\n    return (\n        <>\n            <QuillWrapper className=\"wrapper\">\n                <div ref={quillElement}></div>\n            </QuillWrapper>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}