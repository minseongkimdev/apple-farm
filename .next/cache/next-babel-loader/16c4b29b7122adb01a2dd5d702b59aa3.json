{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/gimminseong/side_project/apple_farm/pratice/apple-farm/src/components/PostCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Card, Comment, Tooltip } from 'antd';\nimport { HeartOutlined, MessageOutlined, HeartTwoTone, LikeOutline, DislikeOutline, DislikeFilled, LikeFilled } from '@ant-design/icons';\nimport PostImages from './PostImages'; // 컴포넌트 설계시 대충 한번 그려보는 거다있음\n// 안드로이드와 비슷하다\n// post 객체는 부모로부터 직접 받아오고 있다\n// 반복문을 통해 생성되는 key를 넣어줘야 함\n\nconst PostCard = ({\n  post\n}) => {\n  _s();\n\n  // const {me} = useSelector((state) => state.user);\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false);\n  const {\n    0: liked,\n    1: setLiked\n  } = useState(false);\n  const onToggleLike = useCallback(() => {\n    setLiked(prev => !prev);\n  }, []);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened(prev => !prev);\n  }, []); // const id = me?.id;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card // &&  expression -> true일때만 렌더링 된다.\n    , {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 35\n      }, this),\n      actions: [/*#__PURE__*/_jsxDEV(HeartOutlined, {}, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MessageOutlined, {}, \"message\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        towToneColor: \"#eb2f96\",\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 19\n      }, this)]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 12\n  }, this);\n};\n\n_s(PostCard, \"qH0zF1Fa5yJSP+8z2p3BAp0s7TA=\");\n\n_c = PostCard;\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["/Users/gimminseong/side_project/apple_farm/pratice/apple-farm/src/components/PostCard.js"],"names":["React","useState","useCallback","useSelector","Card","Comment","Tooltip","HeartOutlined","MessageOutlined","HeartTwoTone","LikeOutline","DislikeOutline","DislikeFilled","LikeFilled","PostImages","PostCard","post","commentFormOpened","setCommentFormOpened","liked","setLiked","onToggleLike","prev","onToggleComment","Images"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,WAAxB,QAA0C,OAA1C;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,IAAR,EAAcC,OAAd,EAAuBC,OAAvB,QAAqC,MAArC;AACA,SAAQC,aAAR,EAAuBC,eAAvB,EAAwCC,YAAxC,EAAqDC,WAArD,EAAiEC,cAAjE,EAAiFC,aAAjF,EAAgGC,UAAhG,QAAiH,mBAAjH;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CACA;AACA;AAEA;AACA;;AACA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAAA;;AAEzB;AACA,QAAM;AAAA,OAACC,iBAAD;AAAA,OAAoBC;AAApB,MAA4CjB,QAAQ,CAAC,KAAD,CAA1D;AACA,QAAM;AAAA,OAACkB,KAAD;AAAA,OAAQC;AAAR,MAAoBnB,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAMoB,YAAY,GAAGnB,WAAW,CAAC,MAAK;AAElCkB,IAAAA,QAAQ,CAAEE,IAAD,IAAU,CAACA,IAAZ,CAAR;AAEH,GAJ+B,EAI9B,EAJ8B,CAAhC;AAKA,QAAMC,eAAe,GAAGrB,WAAW,CAAC,MAAK;AAErCgB,IAAAA,oBAAoB,CAAEI,IAAD,IAAU,CAACA,IAAZ,CAApB;AAEH,GAJkC,EAIjC,EAJiC,CAAnC,CAVyB,CAezB;;AAEA,sBAAO;AAAA,2BACH,QAAC,IAAD,CACA;AADA;AAEA,MAAA,KAAK,EAAGN,IAAI,CAACQ,MAAL,CAAY,CAAZ,kBAAkB,QAAC,UAAD;AAAY,QAAA,MAAM,EAAER,IAAI,CAACQ;AAAzB;AAAA;AAAA;AAAA;AAAA,cAF1B;AAGA,MAAA,OAAO,EAAI,cACP,QAAC,aAAD,MAAmB,OAAnB;AAAA;AAAA;AAAA;AAAA,cADO,eAEP,QAAC,eAAD,MAAqB,SAArB;AAAA;AAAA;AAAA;AAAA,cAFO,EAGPL,KAAK,gBACC,QAAC,YAAD;AAAc,QAAA,YAAY,EAAC,SAA3B;AAAiD,QAAA,OAAO,EAAEE;AAA1D,SAAyC,OAAzC;AAAA;AAAA;AAAA;AAAA,cADD,gBAEC,QAAC,aAAD;AAA2B,QAAA,OAAO,EAAGA;AAArC,SAAmB,OAAnB;AAAA;AAAA;AAAA;AAAA,cALC;AAHX;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,UAAP;AAwBH,CAzCD;;GAAMN,Q;;KAAAA,Q;AA2CN,eAAeA,QAAf","sourcesContent":["import React,{ useState,useCallback} from 'react';\nimport {useSelector} from 'react-redux';\nimport {Card, Comment, Tooltip} from 'antd';\nimport {HeartOutlined, MessageOutlined, HeartTwoTone,LikeOutline,DislikeOutline, DislikeFilled, LikeFilled} from '@ant-design/icons';\nimport PostImages from './PostImages';\n// 컴포넌트 설계시 대충 한번 그려보는 거다있음\n// 안드로이드와 비슷하다\n\n// post 객체는 부모로부터 직접 받아오고 있다\n// 반복문을 통해 생성되는 key를 넣어줘야 함\nconst PostCard = ({post}) => {\n\n    // const {me} = useSelector((state) => state.user);\n    const [commentFormOpened, setCommentFormOpened] = useState(false);\n    const [liked, setLiked] = useState(false);\n    const onToggleLike = useCallback(()=> {\n        \n        setLiked((prev) => !prev);\n        \n    },[]);\n    const onToggleComment = useCallback(()=> {\n        \n        setCommentFormOpened((prev) => !prev);\n        \n    },[]);\n    // const id = me?.id;\n\n    return <div>\n        <Card\n        // &&  expression -> true일때만 렌더링 된다.\n        cover ={post.Images[0] && <PostImages images={post.Images}/>}\n        actions = {[\n            <HeartOutlined key=\"heart\"/>,\n            <MessageOutlined key=\"message\"/>,\n            liked\n                ? <HeartTwoTone towToneColor=\"#eb2f96\" key=\"heart\" onClick={onToggleLike}/>\n                : <HeartOutlined key=\"heart\" onClick ={onToggleLike}/>\n            \n        ]}\n        >\n            {/* <CardHead>\n            </CardHead>\n\n            <Image/>\n            <Content/>\n            <Like/>\n        <Comment/>\n        <CommentForm/> */}\n        </Card>\n\n    </div>\n}\n\nexport default PostCard\n"]},"metadata":{},"sourceType":"module"}