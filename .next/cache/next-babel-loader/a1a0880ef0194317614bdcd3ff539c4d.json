{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/gimminseong/side_project/apple_farm/pratice/apple-farm/src/components/DraftEditor.js\";\nimport React, { useState } from 'react';\nimport { Editor } from 'react-draft-wysiwyg';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg';\nimport styled from 'styled-components';\nimport { EditorState } from 'draft-js';\nconst MyBlock = styled.div`\n    .wrapper-class {\n        width: 50%;\n        margin: 0 auto;\n        margin-bottom: 4rem;\n    }\n    .editor {\n        height: 500px !important;\n        border: 1px solid #f1f1f1 !important;\n        padding: 5px !important;\n        border-radius: 2px !important;\n    }\n`;\n\nconst DraftEditor = () => {\n  // useState로 상태관리하기 초기값은 EditorState.createEmpty()\n  // EditorState의 비어있는 ContentState 기본 구성으로 새 개체를 반환 => 이렇게 안하면 상태 값을 나중에 변경할 수 없음.\n  const {\n    0: editorState,\n    1: setEditorState\n  } = useState(EditorState.createEmpty());\n\n  const onEditorStateChange = editorState => {\n    // editorState에 값 설정\n    setEditorState(editorState);\n  };\n\n  return /*#__PURE__*/_jsxDEV(MyBlock, {\n    children: /*#__PURE__*/_jsxDEV(Editor // 에디터와 툴바 모두에 적용되는 클래스\n    , {\n      wrapperClassName: \"wrapper-class\" // 에디터 주변에 적용된 클래스\n      ,\n      editorClassName: \"editor\" // 툴바 주위에 적용된 클래스\n      ,\n      toolbarClassName: \"toolbar-class\" // 툴바 설정\n      ,\n      toolbar: {\n        // inDropdown: 해당 항목과 관련된 항목을 드롭다운으로 나타낼것인지\n        list: {\n          inDropdown: true\n        },\n        textAlign: {\n          inDropdown: true\n        },\n        link: {\n          inDropdown: true\n        },\n        history: {\n          inDropdown: false\n        }\n      },\n      placeholder: \"\\uB0B4\\uC6A9\\uC744 \\uC791\\uC131\\uD574\\uC8FC\\uC138\\uC694.\" // 한국어 설정\n      ,\n      localization: {\n        locale: 'ko'\n      } // 초기값 설정\n      ,\n      editorState: editorState // 에디터의 값이 변경될 때마다 onEditorStateChange 호출\n      ,\n      onEditorStateChange: onEditorStateChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\nexport default DraftEditor;","map":{"version":3,"sources":["/Users/gimminseong/side_project/apple_farm/pratice/apple-farm/src/components/DraftEditor.js"],"names":["React","useState","Editor","styled","EditorState","MyBlock","div","DraftEditor","editorState","setEditorState","createEmpty","onEditorStateChange","list","inDropdown","textAlign","link","history","locale"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,OAAO,8CAAP;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,QAA4B,UAA5B;AAEA,MAAMC,OAAO,GAAGF,MAAM,CAACG,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;;AAcA,MAAMC,WAAW,GAAG,MAAM;AACtB;AACA;AACA,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCR,QAAQ,CAACG,WAAW,CAACM,WAAZ,EAAD,CAA9C;;AAEA,QAAMC,mBAAmB,GAAGH,WAAW,IAAI;AACvC;AACAC,IAAAA,cAAc,CAACD,WAAD,CAAd;AACH,GAHD;;AAKA,sBACI,QAAC,OAAD;AAAA,2BACI,QAAC,MAAD,CACI;AADJ;AAEI,MAAA,gBAAgB,EAAC,eAFrB,CAGI;AAHJ;AAII,MAAA,eAAe,EAAC,QAJpB,CAKI;AALJ;AAMI,MAAA,gBAAgB,EAAC,eANrB,CAOI;AAPJ;AAQI,MAAA,OAAO,EAAE;AACL;AACAI,QAAAA,IAAI,EAAE;AAAEC,UAAAA,UAAU,EAAE;AAAd,SAFD;AAGLC,QAAAA,SAAS,EAAE;AAAED,UAAAA,UAAU,EAAE;AAAd,SAHN;AAILE,QAAAA,IAAI,EAAE;AAAEF,UAAAA,UAAU,EAAE;AAAd,SAJD;AAKLG,QAAAA,OAAO,EAAE;AAAEH,UAAAA,UAAU,EAAE;AAAd;AALJ,OARb;AAeI,MAAA,WAAW,EAAC,0DAfhB,CAgBI;AAhBJ;AAiBI,MAAA,YAAY,EAAE;AACVI,QAAAA,MAAM,EAAE;AADE,OAjBlB,CAoBI;AApBJ;AAqBI,MAAA,WAAW,EAAET,WArBjB,CAsBI;AAtBJ;AAuBI,MAAA,mBAAmB,EAAEG;AAvBzB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH,CAvCD;;AAyCA,eAAeJ,WAAf","sourcesContent":["import React, { useState } from 'react'\nimport { Editor } from 'react-draft-wysiwyg'\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg'\nimport styled from 'styled-components'\nimport { EditorState } from 'draft-js'\n\nconst MyBlock = styled.div`\n    .wrapper-class {\n        width: 50%;\n        margin: 0 auto;\n        margin-bottom: 4rem;\n    }\n    .editor {\n        height: 500px !important;\n        border: 1px solid #f1f1f1 !important;\n        padding: 5px !important;\n        border-radius: 2px !important;\n    }\n`\n\nconst DraftEditor = () => {\n    // useState로 상태관리하기 초기값은 EditorState.createEmpty()\n    // EditorState의 비어있는 ContentState 기본 구성으로 새 개체를 반환 => 이렇게 안하면 상태 값을 나중에 변경할 수 없음.\n    const [editorState, setEditorState] = useState(EditorState.createEmpty())\n\n    const onEditorStateChange = editorState => {\n        // editorState에 값 설정\n        setEditorState(editorState)\n    }\n\n    return (\n        <MyBlock>\n            <Editor\n                // 에디터와 툴바 모두에 적용되는 클래스\n                wrapperClassName=\"wrapper-class\"\n                // 에디터 주변에 적용된 클래스\n                editorClassName=\"editor\"\n                // 툴바 주위에 적용된 클래스\n                toolbarClassName=\"toolbar-class\"\n                // 툴바 설정\n                toolbar={{\n                    // inDropdown: 해당 항목과 관련된 항목을 드롭다운으로 나타낼것인지\n                    list: { inDropdown: true },\n                    textAlign: { inDropdown: true },\n                    link: { inDropdown: true },\n                    history: { inDropdown: false },\n                }}\n                placeholder=\"내용을 작성해주세요.\"\n                // 한국어 설정\n                localization={{\n                    locale: 'ko',\n                }}\n                // 초기값 설정\n                editorState={editorState}\n                // 에디터의 값이 변경될 때마다 onEditorStateChange 호출\n                onEditorStateChange={onEditorStateChange}\n            />\n        </MyBlock>\n    )\n}\n\nexport default DraftEditor\n"]},"metadata":{},"sourceType":"module"}