{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/gimminseong/side_project/apple_farm/pratice/apple-farm/src/components/DraftEditor.js\";\nimport { useState } from 'react';\nimport dynamic from 'next/dynamic';\nconst ReactQuill = dynamic(_c = () => import('react-quill'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('react-quill')],\n    modules: ['react-quill']\n  }\n});\n_c2 = ReactQuill;\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport '../../node_modules/react-quill/dist/quill.snow.css';\n\nclass MyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editorHtml: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(html) {\n    this.setState({\n      editorHtml: html\n    });\n  }\n\n  apiPostNewsImage() {// API post, returns image location as string e.g. 'http://www.example.com/images/foo.png'\n  }\n\n  imageHandler() {\n    const input = document.createElement('input');\n    input.setAttribute('type', 'file');\n    input.setAttribute('accept', 'image/*');\n    input.click();\n\n    input.onchange = async () => {\n      const file = input.files[0];\n      const formData = new FormData();\n      formData.append('image', file); // Save current cursor state\n\n      const range = this.quill.getSelection(true); // Insert temporary loading placeholder image\n\n      this.quill.insertEmbed(range.index, 'image', `${window.location.origin}/images/loaders/placeholder.gif`); // Move cursor to right side of image (easier to continue typing)\n\n      this.quill.setSelection(range.index + 1);\n      const res = await apiPostNewsImage(formData); // API post, returns image location as string e.g. 'http://www.example.com/images/foo.png'\n      // Remove placeholder image\n\n      this.quill.deleteText(range.index, 1); // Insert uploaded image\n      // this.quill.insertEmbed(range.index, 'image', res.body.image);\n\n      this.quill.insertEmbed(range.index, 'image', res);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-editor\",\n      children: [JSON.stringify(this.state.editorHtml), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n        ref: el => {\n          this.quill = el;\n        },\n        onChange: this.handleChange,\n        placeholder: this.props.placeholder,\n        modules: {\n          toolbar: {\n            container: [[{\n              header: '1'\n            }, {\n              header: '2'\n            }, {\n              header: [3, 4, 5, 6]\n            }, {\n              font: []\n            }], [{\n              size: []\n            }], ['bold', 'italic', 'underline', 'strike', 'blockquote'], [{\n              list: 'ordered'\n            }, {\n              list: 'bullet'\n            }], ['link', 'video'], ['link', 'image', 'video'], ['clean'], ['code-block']],\n            handlers: {\n              image: this.imageHandler\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MyComponent;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ReactQuill$dynamic\");\n$RefreshReg$(_c2, \"ReactQuill\");","map":{"version":3,"sources":["/Users/gimminseong/side_project/apple_farm/pratice/apple-farm/src/components/DraftEditor.js"],"names":["useState","dynamic","ReactQuill","ssr","Modal","Button","MyComponent","React","Component","constructor","props","state","editorHtml","handleChange","bind","html","setState","apiPostNewsImage","imageHandler","input","document","createElement","setAttribute","click","onchange","file","files","formData","FormData","append","range","quill","getSelection","insertEmbed","index","window","location","origin","setSelection","res","deleteText","render","JSON","stringify","el","placeholder","toolbar","container","header","font","size","list","handlers","image"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport dynamic from 'next/dynamic'\nconst ReactQuill = dynamic(() => import('react-quill'), { ssr: false })\nimport Modal from '@material-ui/core/Modal'\nimport Button from '@material-ui/core/Button'\nimport '../../node_modules/react-quill/dist/quill.snow.css'\n\nclass MyComponent extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = { editorHtml: '' }\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    handleChange(html) {\n        this.setState({ editorHtml: html })\n    }\n\n    apiPostNewsImage() {\n        // API post, returns image location as string e.g. 'http://www.example.com/images/foo.png'\n    }\n\n    imageHandler() {\n        const input = document.createElement('input')\n\n        input.setAttribute('type', 'file')\n        input.setAttribute('accept', 'image/*')\n        input.click()\n\n        input.onchange = async () => {\n            const file = input.files[0]\n            const formData = new FormData()\n\n            formData.append('image', file)\n\n            // Save current cursor state\n            const range = this.quill.getSelection(true)\n\n            // Insert temporary loading placeholder image\n            this.quill.insertEmbed(\n                range.index,\n                'image',\n                `${window.location.origin}/images/loaders/placeholder.gif`\n            )\n\n            // Move cursor to right side of image (easier to continue typing)\n            this.quill.setSelection(range.index + 1)\n\n            const res = await apiPostNewsImage(formData) // API post, returns image location as string e.g. 'http://www.example.com/images/foo.png'\n\n            // Remove placeholder image\n            this.quill.deleteText(range.index, 1)\n\n            // Insert uploaded image\n            // this.quill.insertEmbed(range.index, 'image', res.body.image);\n            this.quill.insertEmbed(range.index, 'image', res)\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"text-editor\">\n                {JSON.stringify(this.state.editorHtml)}\n                <hr />\n                <ReactQuill\n                    ref={el => {\n                        this.quill = el\n                    }}\n                    onChange={this.handleChange}\n                    placeholder={this.props.placeholder}\n                    modules={{\n                        toolbar: {\n                            container: [\n                                [\n                                    { header: '1' },\n                                    { header: '2' },\n                                    { header: [3, 4, 5, 6] },\n                                    { font: [] },\n                                ],\n                                [{ size: [] }],\n                                ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n                                [{ list: 'ordered' }, { list: 'bullet' }],\n                                ['link', 'video'],\n                                ['link', 'image', 'video'],\n                                ['clean'],\n                                ['code-block'],\n                            ],\n                            handlers: {\n                                image: this.imageHandler,\n                            },\n                        },\n                    }}\n                />\n            </div>\n        )\n    }\n}\n\nexport default MyComponent\n"]},"metadata":{},"sourceType":"module"}