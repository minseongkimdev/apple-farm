{"ast":null,"code":"import { HYDRATE } from 'next-redux-wrapper';\nconst initialState = {}; // 액션을 동적으로 만들어 주는 함수\n// 액션 크리에이터\n//\n\nexport const loginAction = data => {\n  return {\n    type: 'LOGIN_ACTION',\n    data\n  };\n};\nexport const logoutAction = data => {\n  return {\n    type: 'LOGOUT_ACTION',\n    data\n  };\n}; // const changeNickname = {\n//     type: 'CHANGE_NICKNAME',\n//     data: 'Apple Farm'\n// }\n// 이전 상태와 액션을 통해서 -> 다음 상태를 만들어내는 함수\n// 리듀서 : 차원 축소 (이전상태, 액션) -> 을 다음 상태로 차원을 축소함\n// combine Reducer을 통해서 여러개의 리듀서를 합칠 수 있다.\n\nconst rootReducer = combineReducers({\n  index: (state = {}, action) => {\n    // 서버 사이드 렌더링을 위해서 HYDRATE분기만 추가\n    // 각 initial state는 combineReducer가 알아서 넣어준다.\n    switch (action.type) {\n      case HYDRATE:\n        console.log('HYDRATE' + HYDRATE);\n\n      default:\n        return state;\n    }\n  },\n  user,\n  post\n});","map":{"version":3,"sources":["/Users/gimminseong/side_project/apple_farm/pratice/apple-farm/src/reducers/index.js"],"names":["HYDRATE","initialState","loginAction","data","type","logoutAction","rootReducer","combineReducers","index","state","action","console","log","user","post"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,oBAAtB;AAEA,MAAMC,YAAY,GAAG,EAArB,C,CACA;AACA;AACA;;AACA,OAAO,MAAMC,WAAW,GAAIC,IAAD,IAAU;AAEjC,SAAO;AACHC,IAAAA,IAAI,EAAE,cADH;AAEHD,IAAAA;AAFG,GAAP;AAKH,CAPM;AAQP,OAAO,MAAME,YAAY,GAAIF,IAAD,IAAU;AAElC,SAAO;AACHC,IAAAA,IAAI,EAAE,eADH;AAEHD,IAAAA;AAFG,GAAP;AAKH,CAPM,C,CASP;AACA;AACA;AACA;AAEA;AACA;AAEA;;AACA,MAAMG,WAAW,GAAGC,eAAe,CAAC;AAChCC,EAAAA,KAAK,EAAE,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACnC;AACQ;AACA,YAAQA,MAAM,CAACN,IAAf;AACI,WAAKJ,OAAL;AACIW,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAYZ,OAAxB;;AAGJ;AACI,eAAOS,KAAP;AANR;AAQH,GAZ+B;AAahCI,EAAAA,IAbgC;AAchCC,EAAAA;AAdgC,CAAD,CAAnC","sourcesContent":["import {HYDRATE} from 'next-redux-wrapper';\n\nconst initialState = {};\n// 액션을 동적으로 만들어 주는 함수\n// 액션 크리에이터\n//\nexport const loginAction = (data) => {\n\n    return {\n        type: 'LOGIN_ACTION',\n        data,\n\n    }\n}\nexport const logoutAction = (data) => {\n\n    return {\n        type: 'LOGOUT_ACTION',\n        data,\n\n    }\n}\n\n// const changeNickname = {\n//     type: 'CHANGE_NICKNAME',\n//     data: 'Apple Farm'\n// }\n\n// 이전 상태와 액션을 통해서 -> 다음 상태를 만들어내는 함수\n// 리듀서 : 차원 축소 (이전상태, 액션) -> 을 다음 상태로 차원을 축소함\n\n// combine Reducer을 통해서 여러개의 리듀서를 합칠 수 있다.\nconst rootReducer = combineReducers({\n    index: (state = {}, action) => {\n// 서버 사이드 렌더링을 위해서 HYDRATE분기만 추가\n        // 각 initial state는 combineReducer가 알아서 넣어준다.\n        switch (action.type) {\n            case HYDRATE :\n                console.log('HYDRATE' + HYDRATE)\n\n\n            default :\n                return state;\n        }\n    },\n    user,\n    post,\n});"]},"metadata":{},"sourceType":"module"}