{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/gimminseong/side_project/apple_farm/pratice/apple-farm/src/pages/index.js\",\n    _s = $RefreshSig$();\n\nexport { default as Home } from './home';\nimport AppLayouts from '../components/AppLayouts';\n\nconst Home = () => {\n  _s();\n\n  const {\n    isLoggedIn\n  } = useSelector(state => state.user);\n  const {\n    mainPosts\n  } = useSelector(state => state.post);\n  return /*#__PURE__*/_jsxDEV(AppLayouts, {\n    children: [isLoggined && /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 28\n    }, this), mainPosts.map(post =>\n    /*#__PURE__*/\n    // 안티패턴 : 인덱스를 키로 쓰면 안된다. 반복되는 것들이 지워질 수 있는 가능성이 있기 때문에 무언가 바뀌지 않은 것이면 키를 인덱스로\n    _jsxDEV(PostCard, {\n      post: post\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(PostCard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Apple Farm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"yViitBsbbl69mW3t/o7jzus6gBQ=\", true);\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/gimminseong/side_project/apple_farm/pratice/apple-farm/src/pages/index.js"],"names":["default","Home","AppLayouts","isLoggedIn","useSelector","state","user","mainPosts","post","isLoggined","map","id"],"mappings":";;;;;AAAA,SAASA,OAAO,IAAIC,IAApB,QAAgC,QAAhC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAEA,MAAMD,IAAI,GAAG,MAAM;AAAA;;AACf,QAAM;AAAEE,IAAAA;AAAF,MAAiBC,WAAW,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAlC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAgBH,WAAW,CAACC,KAAK,IAAIA,KAAK,CAACG,IAAhB,CAAjC;AACA,sBACI,QAAC,UAAD;AAAA,eAGKC,UAAU,iBAAI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAHnB,EAIKF,SAAS,CAACG,GAAV,CAAcF,IAAI;AAAA;AACf;AAEA,YAAC,QAAD;AAAwB,MAAA,IAAI,EAAEA;AAA9B,OAAeA,IAAI,CAACG,EAApB;AAAA;AAAA;AAAA;AAAA,YAHH,CAJL,eASI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YATJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAjBD;;GAAMV,I;;KAAAA,I;AAmBN,eAAeA,IAAf","sourcesContent":["export { default as Home } from './home'\nimport AppLayouts from '../components/AppLayouts'\n\nconst Home = () => {\n    const { isLoggedIn } = useSelector(state => state.user)\n    const { mainPosts } = useSelector(state => state.post)\n    return (\n        <AppLayouts>\n            {/* 컴포넌트 이름 부터 정한다 */}\n            {/* 의미가 있는 단위로 컴포넌트를 나눈다. */}\n            {isLoggined && <PostForm />}\n            {mainPosts.map(post => (\n                // 안티패턴 : 인덱스를 키로 쓰면 안된다. 반복되는 것들이 지워질 수 있는 가능성이 있기 때문에 무언가 바뀌지 않은 것이면 키를 인덱스로\n\n                <PostCard key={post.id} post={post} />\n            ))}\n            <PostCard />\n            <div>Apple Farm</div>\n        </AppLayouts>\n    )\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}