{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/gimminseong/side_project/apple_farm/pratice/apple-farm/src/components/PostForm.js\";\nimport React, { useCallback, useState } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useSelector } from 'react-redux';\n\nconst PostForm = () => {\n  const {\n    imagePath\n  } = useSelector(state => state.post);\n  const {\n    0: text,\n    1: onChangeText\n  } = useState('');\n  const onSubmit = useCallback(() => {}, []);\n  return (\n    /*#__PURE__*/\n    // 처음에는 인라인 스타일로 하고, 문제가 생길 때 최적화 하면 된다\n    _jsxDEV(Form, {\n      style: {\n        margin: ' 10px 0 20px'\n      },\n      encType: \"multipart/form-data\",\n      onFinish: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        value: text,\n        onChange: onChangeText,\n        maxLength: 140,\n        placeholder: '어떤 일이 있나요?'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          multiple: true,\n          hidden: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          style: {\n            float: 'right'\n          },\n          htmlType: \"submit\",\n          children: \"\\uC791\\uC131\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this)\n  );\n};\n\nexport default PostForm;","map":{"version":3,"sources":["/Users/gimminseong/side_project/apple_farm/pratice/apple-farm/src/components/PostForm.js"],"names":["React","useCallback","useState","Form","Input","Button","useSelector","PostForm","imagePath","state","post","text","onChangeText","onSubmit","margin","float"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,SAASC,WAAT,QAA4B,aAA5B;;AACA,MAAMC,QAAQ,GAAG,MAAM;AACnB,QAAM;AAAEC,IAAAA;AAAF,MAAgBF,WAAW,CAACG,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAjC;AACA,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAuBV,QAAQ,CAAC,EAAD,CAArC;AACA,QAAMW,QAAQ,GAAGZ,WAAW,CAAC,MAAM,CAAE,CAAT,EAAW,EAAX,CAA5B;AACA;AAAA;AACI;AACA,YAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEa,QAAAA,MAAM,EAAE;AAAV,OAAb;AAAyC,MAAA,OAAO,EAAC,qBAAjD;AAAuE,MAAA,QAAQ,EAAED,QAAjF;AAAA,8BACI,QAAC,KAAD,CAAO,QAAP;AACI,QAAA,KAAK,EAAEF,IADX;AAEI,QAAA,QAAQ,EAAEC,YAFd;AAGI,QAAA,SAAS,EAAE,GAHf;AAII,QAAA,WAAW,EAAE;AAJjB;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAA,gCACI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,MAA3B;AAA4B,UAAA,MAAM;AAAlC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,SAAb;AAAuB,UAAA,KAAK,EAAE;AAAEG,YAAAA,KAAK,EAAE;AAAT,WAA9B;AAAkD,UAAA,QAAQ,EAAC,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAcI;AAAA;AAAA;AAAA;AAAA,cAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AA6BH,CAjCD;;AAmCA,eAAeR,QAAf","sourcesContent":["import React, { useCallback, useState } from 'react'\nimport { Form, Input, Button } from 'antd'\nimport { useSelector } from 'react-redux'\nconst PostForm = () => {\n    const { imagePath } = useSelector(state => state.post)\n    const [text, onChangeText] = useState('')\n    const onSubmit = useCallback(() => {}, [])\n    return (\n        // 처음에는 인라인 스타일로 하고, 문제가 생길 때 최적화 하면 된다\n        <Form style={{ margin: ' 10px 0 20px' }} encType=\"multipart/form-data\" onFinish={onSubmit}>\n            <Input.TextArea\n                value={text}\n                onChange={onChangeText}\n                maxLength={140}\n                placeholder={'어떤 일이 있나요?'}\n            />\n            <div>\n                <input type=\"file\" multiple hidden />\n                <Button>이미지 업로드</Button>\n                <Button type=\"primary\" style={{ float: 'right' }} htmlType=\"submit\">\n                    작성\n                </Button>\n            </div>\n            <div>\n                {/* 이미지 경로가 저장되고 반복문 돌려서 화면에 보여주도록 함 */}\n                {/* {imagePaths.map(v => (\n                    <div key={v} style={{ display: 'inline-block' }}>\n                        <img src={v} style={{ width: '200px' }} alt={v} />\n                        <div>\n                            <Button>제거</Button>\n                        </div>\n                    </div>\n                ))} */}\n            </div>\n        </Form>\n    )\n}\n\nexport default PostForm\n"]},"metadata":{},"sourceType":"module"}